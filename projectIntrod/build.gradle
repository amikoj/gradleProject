
//project 状态监听

this.project.subprojects { sub ->

    if(sub.path.endsWith("test")){
        sub.afterEvaluate {
            println "Evaluate before of "+sub.path
        }
    }
}
this.project.getSubprojects().each { sub ->

    if(sub.path.endsWith("test")){
        sub.afterEvaluate(new Action<Project>() {
            @Override
            void execute(Project project) {
                println "Evaluate before of "+sub.path
            }
        })

    }
}


this.project.subprojects{ sub ->
    if(sub.path.endsWith("test")){
        sub.afterEvaluate { p ->
            println "subprojects getAt Evaluate before of "+p.path

        }

    }
}


this.project.afterEvaluate{
    println "this.project.afterEvaluate"

}




gradle.afterProject {project,projectState ->
    if(projectState.failure){
        println "Evaluation afterProject of $project FAILED"
    } else {
        println "Evaluation afterProject of $project succeeded"
    }
}



gradle.beforeProject { project ->
    println "Evaluation before of $project"

}

gradle.addProjectEvaluationListener(new ProjectEvaluationListener() {
    @Override
    void beforeEvaluate(Project project) {
        println " add project evaluation lister beforeEvaluate,project path is: $project"
    }

    @Override
    void afterEvaluate(Project project, ProjectState state) {
        println " add project evaluation lister afterProject,project path is: $project"
    }
  }

)



/**
 * gradle 工程基本属性配置完成后回调
 */
this.project.afterEvaluate (new Action<Project>() {
    @Override
    void execute(Project project) {
            println "this project evaluate over,and project name is:"+name

        project.getSubprojects().each { sub ->

            println "this project path is： "+sub.path

            if (sub.path.endsWith("test")){
                sub.beforeEvaluate{
                    printf '${sub} before evaluate get.'
                }
            }
        }

        /**
         * 当前工程中的所有任务
         */
        tasks.eachWithIndex{ Task entry, int i ->

            println "task index is:"+i+",and task name is :"+entry.getName()

        }


    }
})







task before <<{
    println("evaluate before.")
}




//配置构建脚本的类路径,需要gradle本身以外的插件资源等,需要配置插件的classpath
buildscript{
    repositories{
        jcenter()

    }
    dependencies{
        classpath  'com.android.tools.build:gradle:1.5.0'
    }

}


//当前所有工程中的配置包括子project和当前主工程的配置
allprojects{
    repositories{
       jcenter()
//        ivy()


    }

    dependencies{

        //

    }


}





project.artifacts{

}

